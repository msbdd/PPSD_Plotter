# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: PPSD_Plotter Build Windows

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write 

jobs:
  Build-Windows:

    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
          python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if (Test-Path "requirements-win-build.txt") { pip install -r requirements-win-build.txt }
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

    - name: Get version from tag
      run: echo "VERSION=${{ github.ref_name }}" | Out-File -FilePath $env:GITHUB_ENV -Append

    # CLI build

    - name: Replace version in setup.py
      run: |
        (Get-Content setup.py) -replace '__VERSION__', "$env:VERSION" | Set-Content setup.py

    - name: Build CLI with cx_Freeze
      run: |
        python setup.py build

    - name: Rename CLI build output
      run: |
        Move-Item build\PPSD_Plotter_Windows ("build\PPSD_Plotter_" + $env:VERSION + "_Windows")

    - name: Create CLI distribution archive
      run: |
        Compress-Archive -Path ("build\PPSD_Plotter_" + $env:VERSION + "_Windows") -DestinationPath ("PPSD_Plotter_" + $env:VERSION + "_Windows.zip")
    
    # Gui build

    - name: Replace version in setup_gui.py
      run: |
        (Get-Content setup_gui.py) -replace '__VERSION__', "$env:VERSION" | Set-Content setup_gui.py

    - name: Build GUI with cx_Freeze
      run: |
        python setup_gui.py build

    - name: Rename GUI build output
      run: |
        Move-Item build\PPSD_Plotter_Windows_GUI ("build\PPSD_Plotter_" + $env:VERSION + "_Windows_GUI")

    - name: Create GUI distribution archive
      run: |
        Compress-Archive -Path ("build\PPSD_Plotter_" + $env:VERSION + "_Windows_GUI") -DestinationPath ("PPSD_Plotter_" + $env:VERSION + "_Windows_GUI.zip")

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v2
      with:
        files: |
          PPSD_Plotter_${{ github.ref_name }}_Windows.zip
          PPSD_Plotter_${{ github.ref_name }}_Windows_GUI.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
